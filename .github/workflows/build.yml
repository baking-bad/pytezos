name: Build
on:
  push:
    branches:
      - '**'
    tags:
      - '*.*.*'
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'Makefile'
      - '.github/workflows/build.yml'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: ghcr.io
      DOCKER_IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Log in to the registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up metadata (pytezos)
        id: meta-pytezos
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REGISTRY }}/baking-bad/pytezos
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=tag

      - name: Set up metadata (michelson-kernel)
        id: meta-kernel
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REGISTRY }}/baking-bad/michelson-kernel
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=tag

      - name: Publish nightly image (pytezos)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta-pytezos.outputs.tags }}
          labels: ${{ steps.meta-pytezos.outputs.labels }}

      - name: Publish nightly image (michelson-kernel)
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.kernel
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta-kernel.outputs.tags }}
          labels: ${{ steps.meta-kernel.outputs.labels }}
